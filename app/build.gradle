apply plugin: 'com.android.application'
apply plugin: 'com.neenbedankt.android-apt'
apply plugin: 'com.fernandocejas.frodo'

android {
    def globalConfiguration = rootProject.extensions.getByName("ext")

    compileSdkVersion globalConfiguration.getAt("androidCompileSdkVersion")
    buildToolsVersion globalConfiguration.getAt("androidBuildToolsVersion")

    defaultConfig {
        minSdkVersion globalConfiguration.getAt("androidMinSdkVersion")
        targetSdkVersion globalConfiguration.getAt("androidTargetSdkVersion")

        applicationId globalConfiguration.getAt("androidApplicationId")
        versionCode globalConfiguration.getAt("androidVersionCode")
        versionName globalConfiguration.getAt("androidVersionName")
        testInstrumentationRunner globalConfiguration.getAt("testInstrumentationRunner")
        testApplicationId globalConfiguration.getAt("testApplicationId")
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    packagingOptions {
        exclude 'LICENSE.txt'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/ASL2.0'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
    }

    lintOptions {
        quiet true
        abortOnError false
        ignoreWarnings true
        disable 'InvalidPackage'            //Some libraries have issues with this.
        disable 'OldTargetApi'              //Lint gives this warning but SDK 20 would be Android L Beta.
        disable 'IconDensities'             //For testing purpose. This is safe to remove.
        disable 'IconMissingDensityFolder'  //For testing purpose. This is safe to remove.
    }

    signingConfigs {
        debug {
            storeFile file('../buildsystem/debug.keystore')
            storePassword 'android'
            keyAlias 'androiddebugkey'
            keyPassword 'android'
        }
    }

    buildTypes {
        debug {
            signingConfig signingConfigs.debug
        }
    }

    productFlavors {
        // Define separate dev and prod product flavors.
        dev {
            // dev utilizes minSDKVersion = 21 to allow the Android gradle plugin
            // to pre-dex each module and produce an APK that can be tested on
            // Android Lollipop without time consuming dex merging processes.
            minSdkVersion 21
        }
        prod {
            // The actual minSdkVersion for the application.
            minSdkVersion globalConfiguration.getAt("androidMinSdkVersion")
        }
    }
}

dependencies {
    def lib = rootProject.ext.commonDependencies
    def presentationLib = rootProject.ext.presentationDependencies
    def presentationTestLib = rootProject.ext.presentationTestDependencies
    def dataLib = rootProject.ext.dataDependencies
    def testLib = rootProject.ext.dataTestDependencies

    apt lib.daggerCompiler
    provided lib.javaxAnnotation
    compile lib.dagger

    compile lib.supportAnnotations

    compile presentationLib.butterKnife
    compile presentationLib.appcompatv7
    compile presentationLib.recyclerView

    compile dataLib.rxJava
    compile dataLib.rxAndroid

    compile dataLib.gson
    compile dataLib.retrofit2
    compile dataLib.retrofit2GsonConverter
    compile dataLib.retrofit2RxAdapter

    testApt lib.daggerCompiler
    testCompile testLib.junit
    testCompile testLib.mockito
    testCompile testLib.hamcrest
    testCompile testLib.robolectric

    androidTestApt lib.daggerCompiler
    androidTestCompile presentationTestLib.mockito
    androidTestCompile presentationTestLib.hamcrest
    androidTestCompile presentationTestLib.dexmaker
    androidTestCompile presentationTestLib.dexmakerMockito
    androidTestCompile presentationTestLib.espressoCore
    androidTestCompile presentationTestLib.espressoIntents
    androidTestCompile presentationTestLib.androidTestRules
}

configurations.all {
    resolutionStrategy {
        // Force our version of support-annotations, we have a conflict between app and androidTest dependency resolution.
        force rootProject.ext.commonDependencies.supportAnnotations
    }
}